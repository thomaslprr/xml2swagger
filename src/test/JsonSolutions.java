package test;

public class JsonSolutions {
	
	public static final String PETSTORE_SOLUTION = "{\n"
			+ "    \"basePath\": \"/v2\",\n"
			+ "    \"definitions\": {\n"
			+ "        \"ApiResponse\": {\n"
			+ "            \"properties\": {\n"
			+ "                \"code\": {\n"
			+ "                    \"format\": \"int32\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                },\n"
			+ "                \"message\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"type\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                }\n"
			+ "            },\n"
			+ "            \"type\": \"object\"\n"
			+ "        },\n"
			+ "        \"Category\": {\n"
			+ "            \"properties\": {\n"
			+ "                \"id\": {\n"
			+ "                    \"format\": \"int64\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                },\n"
			+ "                \"name\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                }\n"
			+ "            },\n"
			+ "            \"type\": \"object\"\n"
			+ "        },\n"
			+ "        \"Order\": {\n"
			+ "            \"properties\": {\n"
			+ "                \"complete\": {\n"
			+ "                    \"type\": \"boolean\"\n"
			+ "                },\n"
			+ "                \"id\": {\n"
			+ "                    \"format\": \"int64\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                },\n"
			+ "                \"petId\": {\n"
			+ "                    \"format\": \"int64\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                },\n"
			+ "                \"quantity\": {\n"
			+ "                    \"format\": \"int32\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                },\n"
			+ "                \"shipDate\": {\n"
			+ "                    \"format\": \"date-time\",\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"status\": {\n"
			+ "                    \"description\": \"Order Status\",\n"
			+ "                    \"enum\": [\n"
			+ "                        \"placed\",\n"
			+ "                        \"approved\",\n"
			+ "                        \"delivered\"\n"
			+ "                    ],\n"
			+ "                    \"type\": \"string\"\n"
			+ "                }\n"
			+ "            },\n"
			+ "            \"type\": \"object\"\n"
			+ "        },\n"
			+ "        \"Pet\": {\n"
			+ "            \"properties\": {\n"
			+ "                \"category\": {\n"
			+ "                    \"$ref\": \"#/definitions/Category\"\n"
			+ "                },\n"
			+ "                \"id\": {\n"
			+ "                    \"format\": \"int64\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                },\n"
			+ "                \"name\": {\n"
			+ "                    \"example\": \"doggie\",\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"photoUrls\": {\n"
			+ "                    \"items\": {\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    },\n"
			+ "                    \"type\": \"array\"\n"
			+ "                },\n"
			+ "                \"status\": {\n"
			+ "                    \"description\": \"pet status in the store\",\n"
			+ "                    \"enum\": [\n"
			+ "                        \"available\",\n"
			+ "                        \"pending\",\n"
			+ "                        \"sold\"\n"
			+ "                    ],\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"tags\": {\n"
			+ "                    \"items\": {\n"
			+ "                        \"$ref\": \"#/definitions/Tag\"\n"
			+ "                    },\n"
			+ "                    \"type\": \"array\"\n"
			+ "                }\n"
			+ "            },\n"
			+ "            \"required\": [\n"
			+ "                \"name\",\n"
			+ "                \"photoUrls\"\n"
			+ "            ],\n"
			+ "            \"type\": \"object\"\n"
			+ "        },\n"
			+ "        \"Tag\": {\n"
			+ "            \"properties\": {\n"
			+ "                \"id\": {\n"
			+ "                    \"format\": \"int64\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                },\n"
			+ "                \"name\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                }\n"
			+ "            },\n"
			+ "            \"type\": \"object\"\n"
			+ "        },\n"
			+ "        \"User\": {\n"
			+ "            \"properties\": {\n"
			+ "                \"email\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"firstName\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"id\": {\n"
			+ "                    \"format\": \"int64\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                },\n"
			+ "                \"lastName\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"password\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"phone\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"username\": {\n"
			+ "                    \"type\": \"string\"\n"
			+ "                },\n"
			+ "                \"userStatus\": {\n"
			+ "                    \"description\": \"User Status\",\n"
			+ "                    \"format\": \"int32\",\n"
			+ "                    \"type\": \"integer\"\n"
			+ "                }\n"
			+ "            },\n"
			+ "            \"type\": \"object\"\n"
			+ "        }\n"
			+ "    },\n"
			+ "    \"host\": \"petstore.swagger.io\",\n"
			+ "    \"info\": {\n"
			+ "        \"contact\": {\n"
			+ "            \"email\": \"apiteam@swagger.io\"\n"
			+ "        },\n"
			+ "        \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n"
			+ "        \"license\": {\n"
			+ "            \"name\": \"Apache 2.0\",\n"
			+ "            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n"
			+ "        },\n"
			+ "        \"termsOfService\": \"http://swagger.io/terms/\",\n"
			+ "        \"title\": \"Swagger Petstore\",\n"
			+ "        \"version\": \"1.0.5\"\n"
			+ "    },\n"
			+ "    \"paths\": {\n"
			+ "        \"/pet\": {\n"
			+ "            \"post\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"addPet\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"Pet object that needs to be added to the store\",\n"
			+ "                        \"in\": \"body\",\n"
			+ "                        \"name\": \"body\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/Pet\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"405\": {\n"
			+ "                        \"description\": \"Invalid input\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Add a new pet to the store\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"pet\"\n"
			+ "                ]\n"
			+ "            },\n"
			+ "            \"put\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"updatePet\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"Pet object that needs to be added to the store\",\n"
			+ "                        \"in\": \"body\",\n"
			+ "                        \"name\": \"body\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/Pet\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid ID supplied\"\n"
			+ "                    },\n"
			+ "                    \"404\": {\n"
			+ "                        \"description\": \"Pet not found\"\n"
			+ "                    },\n"
			+ "                    \"405\": {\n"
			+ "                        \"description\": \"Validation exception\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Update an existing pet\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"pet\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/pet/{petId}\": {\n"
			+ "            \"delete\": {\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"deletePet\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"in\": \"header\",\n"
			+ "                        \"name\": \"api_key\",\n"
			+ "                        \"required\": false,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    },\n"
			+ "                    {\n"
			+ "                        \"description\": \"Pet id to delete\",\n"
			+ "                        \"format\": \"int64\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"name\": \"petId\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"integer\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid ID supplied\"\n"
			+ "                    },\n"
			+ "                    \"404\": {\n"
			+ "                        \"description\": \"Pet not found\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Deletes a pet\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"pet\"\n"
			+ "                ]\n"
			+ "            },\n"
			+ "            \"get\": {\n"
			+ "                \"description\": \"Returns a single pet\",\n"
			+ "                \"operationId\": \"getPetById\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"ID of pet to return\",\n"
			+ "                        \"format\": \"int64\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"name\": \"petId\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"integer\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/Pet\"\n"
			+ "                        }\n"
			+ "                    },\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid ID supplied\"\n"
			+ "                    },\n"
			+ "                    \"404\": {\n"
			+ "                        \"description\": \"Pet not found\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Find pet by ID\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"pet\"\n"
			+ "                ]\n"
			+ "            },\n"
			+ "            \"post\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"application/x-www-form-urlencoded\"\n"
			+ "                ],\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"updatePetWithForm\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"ID of pet that needs to be updated\",\n"
			+ "                        \"format\": \"int64\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"name\": \"petId\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"integer\"\n"
			+ "                    },\n"
			+ "                    {\n"
			+ "                        \"description\": \"Updated name of the pet\",\n"
			+ "                        \"in\": \"formData\",\n"
			+ "                        \"name\": \"name\",\n"
			+ "                        \"required\": false,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    },\n"
			+ "                    {\n"
			+ "                        \"description\": \"Updated status of the pet\",\n"
			+ "                        \"in\": \"formData\",\n"
			+ "                        \"name\": \"status\",\n"
			+ "                        \"required\": false,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"405\": {\n"
			+ "                        \"description\": \"Invalid input\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Updates a pet in the store with form data\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"pet\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/pet/{petId}/uploadImage\": {\n"
			+ "            \"post\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"multipart/form-data\"\n"
			+ "                ],\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"uploadFile\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"ID of pet to update\",\n"
			+ "                        \"format\": \"int64\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"name\": \"petId\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"integer\"\n"
			+ "                    },\n"
			+ "                    {\n"
			+ "                        \"description\": \"Additional data to pass to server\",\n"
			+ "                        \"in\": \"formData\",\n"
			+ "                        \"name\": \"additionalMetadata\",\n"
			+ "                        \"required\": false,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    },\n"
			+ "                    {\n"
			+ "                        \"description\": \"file to upload\",\n"
			+ "                        \"in\": \"formData\",\n"
			+ "                        \"name\": \"file\",\n"
			+ "                        \"required\": false,\n"
			+ "                        \"type\": \"file\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/ApiResponse\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"uploads an image\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"pet\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/pet/findByStatus\": {\n"
			+ "            \"get\": {\n"
			+ "                \"description\": \"Multiple status values can be provided with comma separated strings\",\n"
			+ "                \"operationId\": \"findPetsByStatus\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"collectionFormat\": \"multi\",\n"
			+ "                        \"description\": \"Status values that need to be considered for filter\",\n"
			+ "                        \"in\": \"query\",\n"
			+ "                        \"items\": {\n"
			+ "                            \"default\": \"available\",\n"
			+ "                            \"enum\": [\n"
			+ "                                \"available\",\n"
			+ "                                \"pending\",\n"
			+ "                                \"sold\"\n"
			+ "                            ],\n"
			+ "                            \"type\": \"string\"\n"
			+ "                        },\n"
			+ "                        \"name\": \"status\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"array\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"items\": {\n"
			+ "                                \"$ref\": \"#/definitions/Pet\"\n"
			+ "                            },\n"
			+ "                            \"type\": \"array\"\n"
			+ "                        }\n"
			+ "                    },\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid status value\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Finds Pets by status\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"pet\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/pet/findByTags\": {\n"
			+ "            \"get\": {\n"
			+ "                \"deprecated\": true,\n"
			+ "                \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n"
			+ "                \"operationId\": \"findPetsByTags\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"collectionFormat\": \"multi\",\n"
			+ "                        \"description\": \"Tags to filter by\",\n"
			+ "                        \"in\": \"query\",\n"
			+ "                        \"items\": {\n"
			+ "                            \"type\": \"string\"\n"
			+ "                        },\n"
			+ "                        \"name\": \"tags\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"array\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"items\": {\n"
			+ "                                \"$ref\": \"#/definitions/Pet\"\n"
			+ "                            },\n"
			+ "                            \"type\": \"array\"\n"
			+ "                        }\n"
			+ "                    },\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid tag value\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Finds Pets by tags\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"pet\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/store/inventory\": {\n"
			+ "            \"get\": {\n"
			+ "                \"description\": \"Returns a map of status codes to quantities\",\n"
			+ "                \"operationId\": \"getInventory\",\n"
			+ "                \"parameters\": [\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"additionalProperties\": {\n"
			+ "                                \"format\": \"int32\",\n"
			+ "                                \"type\": \"integer\"\n"
			+ "                            },\n"
			+ "                            \"type\": \"object\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Returns pet inventories by status\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"store\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/store/order\": {\n"
			+ "            \"post\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"application/json\"\n"
			+ "                ],\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"placeOrder\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"order placed for purchasing the pet\",\n"
			+ "                        \"in\": \"body\",\n"
			+ "                        \"name\": \"body\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/Order\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/Order\"\n"
			+ "                        }\n"
			+ "                    },\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid Order\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Place an order for a pet\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"store\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/store/order/{orderId}\": {\n"
			+ "            \"delete\": {\n"
			+ "                \"description\": \"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\",\n"
			+ "                \"operationId\": \"deleteOrder\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"ID of the order that needs to be deleted\",\n"
			+ "                        \"format\": \"int64\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"minimum\": 1,\n"
			+ "                        \"name\": \"orderId\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"integer\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid ID supplied\"\n"
			+ "                    },\n"
			+ "                    \"404\": {\n"
			+ "                        \"description\": \"Order not found\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Delete purchase order by ID\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"store\"\n"
			+ "                ]\n"
			+ "            },\n"
			+ "            \"get\": {\n"
			+ "                \"description\": \"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions\",\n"
			+ "                \"operationId\": \"getOrderById\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"ID of pet that needs to be fetched\",\n"
			+ "                        \"format\": \"int64\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"maximum\": 10,\n"
			+ "                        \"minimum\": 1,\n"
			+ "                        \"name\": \"orderId\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"integer\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/Order\"\n"
			+ "                        }\n"
			+ "                    },\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid ID supplied\"\n"
			+ "                    },\n"
			+ "                    \"404\": {\n"
			+ "                        \"description\": \"Order not found\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Find purchase order by ID\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"store\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/user\": {\n"
			+ "            \"post\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"application/json\"\n"
			+ "                ],\n"
			+ "                \"description\": \"This can only be done by the logged in user.\",\n"
			+ "                \"operationId\": \"createUser\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"Created user object\",\n"
			+ "                        \"in\": \"body\",\n"
			+ "                        \"name\": \"body\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/User\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"default\": {\n"
			+ "                        \"description\": \"successful operation\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Create user\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"user\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/user/{username}\": {\n"
			+ "            \"delete\": {\n"
			+ "                \"description\": \"This can only be done by the logged in user.\",\n"
			+ "                \"operationId\": \"deleteUser\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"The name that needs to be deleted\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"name\": \"username\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid username supplied\"\n"
			+ "                    },\n"
			+ "                    \"404\": {\n"
			+ "                        \"description\": \"User not found\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Delete user\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"user\"\n"
			+ "                ]\n"
			+ "            },\n"
			+ "            \"get\": {\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"getUserByName\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"The name that needs to be fetched. Use user1 for testing.\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"name\": \"username\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/User\"\n"
			+ "                        }\n"
			+ "                    },\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid username supplied\"\n"
			+ "                    },\n"
			+ "                    \"404\": {\n"
			+ "                        \"description\": \"User not found\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Get user by user name\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"user\"\n"
			+ "                ]\n"
			+ "            },\n"
			+ "            \"put\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"application/json\"\n"
			+ "                ],\n"
			+ "                \"description\": \"This can only be done by the logged in user.\",\n"
			+ "                \"operationId\": \"updateUser\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"The name that need to be updated\",\n"
			+ "                        \"in\": \"path\",\n"
			+ "                        \"name\": \"username\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    },\n"
			+ "                    {\n"
			+ "                        \"description\": \"Updated user object\",\n"
			+ "                        \"in\": \"body\",\n"
			+ "                        \"name\": \"body\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"schema\": {\n"
			+ "                            \"$ref\": \"#/definitions/User\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid user supplied\"\n"
			+ "                    },\n"
			+ "                    \"404\": {\n"
			+ "                        \"description\": \"User not found\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Updated user\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"user\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/user/createWithArray\": {\n"
			+ "            \"post\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"application/json\"\n"
			+ "                ],\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"createUsersWithArrayInput\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"List of user object\",\n"
			+ "                        \"in\": \"body\",\n"
			+ "                        \"name\": \"body\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"schema\": {\n"
			+ "                            \"items\": {\n"
			+ "                                \"$ref\": \"#/definitions/User\"\n"
			+ "                            },\n"
			+ "                            \"type\": \"array\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"default\": {\n"
			+ "                        \"description\": \"successful operation\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Creates list of users with given input array\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"user\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/user/createWithList\": {\n"
			+ "            \"post\": {\n"
			+ "                \"consumes\": [\n"
			+ "                    \"application/json\"\n"
			+ "                ],\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"createUsersWithListInput\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"List of user object\",\n"
			+ "                        \"in\": \"body\",\n"
			+ "                        \"name\": \"body\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"schema\": {\n"
			+ "                            \"items\": {\n"
			+ "                                \"$ref\": \"#/definitions/User\"\n"
			+ "                            },\n"
			+ "                            \"type\": \"array\"\n"
			+ "                        }\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"default\": {\n"
			+ "                        \"description\": \"successful operation\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Creates list of users with given input array\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"user\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/user/login\": {\n"
			+ "            \"get\": {\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"loginUser\",\n"
			+ "                \"parameters\": [\n"
			+ "                    {\n"
			+ "                        \"description\": \"The user name for login\",\n"
			+ "                        \"in\": \"query\",\n"
			+ "                        \"name\": \"username\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    },\n"
			+ "                    {\n"
			+ "                        \"description\": \"The password for login in clear text\",\n"
			+ "                        \"in\": \"query\",\n"
			+ "                        \"name\": \"password\",\n"
			+ "                        \"required\": true,\n"
			+ "                        \"type\": \"string\"\n"
			+ "                    }\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"200\": {\n"
			+ "                        \"description\": \"successful operation\",\n"
			+ "                        \"schema\": {\n"
			+ "                            \"type\": \"string\"\n"
			+ "                        }\n"
			+ "                    },\n"
			+ "                    \"400\": {\n"
			+ "                        \"description\": \"Invalid username/password supplied\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Logs user into the system\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"user\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        },\n"
			+ "        \"/user/logout\": {\n"
			+ "            \"get\": {\n"
			+ "                \"description\": \"\",\n"
			+ "                \"operationId\": \"logoutUser\",\n"
			+ "                \"parameters\": [\n"
			+ "                ],\n"
			+ "                \"produces\": [\n"
			+ "                    \"application/json\",\n"
			+ "                    \"application/xml\"\n"
			+ "                ],\n"
			+ "                \"responses\": {\n"
			+ "                    \"default\": {\n"
			+ "                        \"description\": \"successful operation\"\n"
			+ "                    }\n"
			+ "                },\n"
			+ "                \"summary\": \"Logs out current logged in user session\",\n"
			+ "                \"tags\": [\n"
			+ "                    \"user\"\n"
			+ "                ]\n"
			+ "            }\n"
			+ "        }\n"
			+ "    },\n"
			+ "    \"schemes\": [\n"
			+ "        \"https\",\n"
			+ "        \"http\"\n"
			+ "    ],\n"
			+ "    \"swagger\": \"2.0\",\n"
			+ "    \"tags\": [\n"
			+ "        {\n"
			+ "            \"description\": \"Everything about your Pets\",\n"
			+ "            \"externalDocs\": {\n"
			+ "                \"description\": \"Find out more\",\n"
			+ "                \"url\": \"http://swagger.io\"\n"
			+ "            },\n"
			+ "            \"name\": \"pet\"\n"
			+ "        },\n"
			+ "        {\n"
			+ "            \"description\": \"Access to Petstore orders\",\n"
			+ "            \"name\": \"store\"\n"
			+ "        },\n"
			+ "        {\n"
			+ "            \"description\": \"Operations about user\",\n"
			+ "            \"externalDocs\": {\n"
			+ "                \"description\": \"Find out more about our store\",\n"
			+ "                \"url\": \"http://swagger.io\"\n"
			+ "            },\n"
			+ "            \"name\": \"user\"\n"
			+ "        }\n"
			+ "    ]\n"
			+ "}";
	
		public static final String EXAMPLE1_SOLUTION = "{\n"
				+ "  \"basePath\": \"/slc_web_balder/ws/1.0\",\n"
				+ "  \"paths\": {\n"
				+ "    \"/color/{id}\": {\n"
				+ "      \"get\": {\n"
				+ "        \"summary\": \"Method to search a color\",\n"
				+ "        \"produces\": [\"application/json\"],\n"
				+ "        \"operationId\": \"search-detailled\",\n"
				+ "        \"description\": \"\",\n"
				+ "        \"responses\": {\"default\": {\"description\": \"successful operation\"}},\n"
				+ "        \"parameters\": [{\n"
				+ "          \"in\": \"path\",\n"
				+ "          \"name\": \"id\",\n"
				+ "          \"format\": \"int32\",\n"
				+ "          \"type\": \"integer\",\n"
				+ "          \"required\": true\n"
				+ "        }],\n"
				+ "        \"tags\": [\"color v2\"]\n"
				+ "      },\n"
				+ "      \"put\": {\n"
				+ "        \"produces\": [\"application/json\"],\n"
				+ "        \"operationId\": \"update\",\n"
				+ "        \"description\": \"\",\n"
				+ "        \"responses\": {\n"
				+ "          \"default\": {\n"
				+ "            \"schema\": {\"$ref\": \"#/definitions/ColorRestBeans\"},\n"
				+ "            \"description\": \"successful operation\"\n"
				+ "          },\n"
				+ "          \"404\": {\"description\": \"Page not found\"}\n"
				+ "        },\n"
				+ "        \"parameters\": [\n"
				+ "          {\n"
				+ "            \"in\": \"path\",\n"
				+ "            \"name\": \"id\",\n"
				+ "            \"format\": \"int32\",\n"
				+ "            \"type\": \"integer\",\n"
				+ "            \"required\": true\n"
				+ "          },\n"
				+ "          {\n"
				+ "            \"schema\": {\"$ref\": \"#/definitions/ColorRestBeans\"},\n"
				+ "            \"in\": \"body\",\n"
				+ "            \"name\": \"body\",\n"
				+ "            \"required\": false\n"
				+ "          }\n"
				+ "        ],\n"
				+ "        \"tags\": [\"color v2\"]\n"
				+ "      }\n"
				+ "    },\n"
				+ "    \"/color\": {\n"
				+ "      \"post\": {\n"
				+ "        \"produces\": [\"application/json\"],\n"
				+ "        \"operationId\": \"add-color\",\n"
				+ "        \"description\": \"\",\n"
				+ "        \"responses\": {\"default\": {\"description\": \"successful operation\"}},\n"
				+ "        \"parameters\": [{\n"
				+ "          \"schema\": {\"$ref\": \"#/definitions/ColorRestBeans\"},\n"
				+ "          \"in\": \"body\",\n"
				+ "          \"name\": \"body\",\n"
				+ "          \"required\": false\n"
				+ "        }],\n"
				+ "        \"tags\": [\"color v2\"]\n"
				+ "      },\n"
				+ "      \"get\": {\n"
				+ "        \"produces\": [\"application/json\"],\n"
				+ "        \"operationId\": \"search\",\n"
				+ "        \"description\": \"\",\n"
				+ "        \"responses\": {\"default\": {\"description\": \"successful operation\"}},\n"
				+ "        \"parameters\": [],\n"
				+ "        \"tags\": [\"color v2\"]\n"
				+ "      }\n"
				+ "    }\n"
				+ "  },\n"
				+ "  \"host\": \"api.example.com\",\n"
				+ "  \"schemes\": [\n"
				+ "    \"https\",\n"
				+ "    \"http\",\n"
				+ "    \"ws\",\n"
				+ "    \"wss\"\n"
				+ "  ],\n"
				+ "  \"definitions\": {\n"
				+ "    \"ColorRestBeans\": {\n"
				+ "      \"type\": \"object\",\n"
				+ "      \"properties\": {\n"
				+ "        \"code\": {\n"
				+ "          \"format\": \"int64\",\n"
				+ "          \"type\": \"integer\"\n"
				+ "        },\n"
				+ "        \"blue\": {\n"
				+ "          \"format\": \"int64\",\n"
				+ "          \"type\": \"integer\"\n"
				+ "        },\n"
				+ "        \"alpha\": {\n"
				+ "          \"format\": \"int64\",\n"
				+ "          \"type\": \"integer\"\n"
				+ "        },\n"
				+ "        \"Label\": {\"$ref\": \"#/definitions/Label\"},\n"
				+ "        \"id\": {\n"
				+ "          \"format\": \"int64\",\n"
				+ "          \"type\": \"integer\"\n"
				+ "        },\n"
				+ "        \"type\": {\n"
				+ "          \"type\": \"array\",\n"
				+ "          \"items\": {\"type\": \"string\"}\n"
				+ "        }\n"
				+ "      }\n"
				+ "    },\n"
				+ "    \"Label\": {\n"
				+ "      \"type\": \"object\",\n"
				+ "      \"properties\": {\n"
				+ "        \"Description\": {\"type\": \"string\"},\n"
				+ "        \"Name\": {\"type\": \"string\"}\n"
				+ "      }\n"
				+ "    }\n"
				+ "  },\n"
				+ "  \"swagger\": \"2.0\",\n"
				+ "  \"info\": {\n"
				+ "    \"license\": {\n"
				+ "      \"name\": \"Apache 2.0 License\",\n"
				+ "      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n"
				+ "    },\n"
				+ "    \"contact\": {\n"
				+ "      \"name\": \"Selic\",\n"
				+ "      \"email\": \"selic@contact.fr\",\n"
				+ "      \"url\": \"http://selic.fr/\"\n"
				+ "    },\n"
				+ "    \"description\": \"The Application\",\n"
				+ "    \"termsOfService\": \"Test\",\n"
				+ "    \"title\": \"Sample REST Application\",\n"
				+ "    \"version\": \"1.0.0\"\n"
				+ "  },\n"
				+ "  \"tags\": [{\n"
				+ "    \"name\": \"color v2\",\n"
				+ "    \"description\": \"Everything about color\",\n"
				+ "    \"externalDocs\": {\n"
				+ "      \"description\": \"Find out more\",\n"
				+ "      \"url\": \"https://en.wikipedia.org/wiki/Color\"\n"
				+ "    }\n"
				+ "  }]\n"
				+ "}\n"
				+ "";

}
